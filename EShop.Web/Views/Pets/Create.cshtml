

     @model EShop.Domain.Models.Pet

@{
    ViewData["Title"] = "Create Pet";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h1>Create Pet</h1>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Type, (SelectList)ViewData["PetType"], "Select Pet Type", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Breed, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Breed, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Breed, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Sex, new SelectList(new[] { "Male", "Female" }), "Select Sex", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhotoUrl, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.PhotoUrl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhotoUrl, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Status, new SelectList(Enum.GetValues(typeof(EShop.Domain.Status.PetStatus)).Cast<EShop.Domain.Status.PetStatus>().Select(e => new { Id = (int)e, Name = e.ToString() }), "Id", "Name"), "Select Status", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShelterId, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(model => model.ShelterId, (SelectList)ViewData["ShelterId"], "Select Shelter", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ShelterId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-primary" />
            <a href="@Url.Action("Index")" class="btn btn-secondary">Cancel</a>
        </div>

        <div class="mt-3">
            <a href="@Url.Action("Index", "Pets")" class="btn btn-link">Back to List</a>
        </div>
    }
</div>

<style>
    
    body {
        /* background-color: #f5f5f5; */
        font-family: 'Roboto', sans-serif;
        margin: 0;
        padding: 0;
    }

    
    .container {
        max-width: 900px;
        margin: 0 auto;
        padding: 20px;
        /* background-color: #fff; /* White background for the form */ */
        border-radius: 10px;
        box-shadow: 0 10px 30px 5px rgba(0, 0, 0, 0.2);
    }

    /* Style the form elements */
    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            font-weight: bold;
            color: #333;
        }

    .form-control {
        border-radius: 5px;
        border: 1px solid #ccc;
        padding: 10px;
        font-size: 16px;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
    }

    .btn-link {
        color: #007bff;
        text-decoration: none;
    }

        .btn-link:hover {
            text-decoration: underline;
        }

</style>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
 
